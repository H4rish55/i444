BEGIN sortStrChars()
    ok: sortStrChars("hello world")
    ok: sortStrChars("")
    ok: sortStrChars("hello\n\tworld")
BEGIN wordLengths()
    ok: wordLengths("Twas brillig and the slithy toves")
    ok: wordLengths(" T a ")
    ok: wordLengths("    ")
    ok: wordLengths("")
BEGIN selectWords()
    ok: selectWords("Twas brillig and the slithy toves")
    ok: selectWords("Twas brillig and the slithy toves", 2)
    ok: selectWords("Twas brillig and the slithy toves", 5)
    ok: selectWords("Twas brillig and the slithy toves", 8)
    ok: selectWords("  ")
BEGIN casedWords()
    ok: casedWords("twas brillig and the slithy toves")
    ok: casedWords("TWAS BRILLIG AND THE SLITHY TOVES")
    ok: casedWords("@twas br2ill4ig and the slithy toves")
    ok: casedWords("@ x")
    ok: casedWords("  ")
BEGIN alternatingCase()
    ok: alternatingCase("twas brillig and the slithy toves")
    ok: alternatingCase("twas' brillig and the slithy toves")
    ok: alternatingCase(" 123ab ")
    ok: alternatingCase("  ")
BEGIN rotAlphabets()
    ok: rotAlphabets("'Twas brillig and the slithy toves")
    ok: rotAlphabets("'Gjnf oevyyvt naq gur fyvgul gbirf")
    ok: rotAlphabets("0 Az @", 3)
    ok: rotAlphabets("0 @", 3)
    ok: rotAlphabets("", 3)
BEGIN wordLenPoly()
    ok: wordLenPoly("a a a a", 2)
    ok: wordLenPoly("a aa aaa aaaa", 10)
    ok: wordLenPoly("@ @@ @@@ @", 10)
    ok: wordLenPoly(" @@ ", 10)
    ok: wordLenPoly(" ", 10)
BEGIN map2()
    ok: map2((a, b) => a + b, [1,2,3], [3,4,5])
    ok: map2((a, b) => a + b, [1,2], [3,4,5])
    ok: map2((a, b) => a + b, [1], [3,4,5])
    ok: map2((a, b) => a * b.length, [1,2,3], ["twas","brillig","and"])
    ok: map2((a, b) => a + b, [], [3,4,5])
    ok: map2((a, b) => a * b, [1,2], [3,4,5])
    ok: map2((a, b) => a * b, [1,2], [])
    ok: map2((a, b) => a * b, [1,2,3,4,5,6], [3,4,5])
BEGIN rmap2()
    ok: rmap2((a, b) => a * b, [3,4,5])
    ok: rmap2((a, b) => a / b, [3,4,5])
    ok: rmap2((a, b) => a - b, [3,4,5])
    ok: rmap2((a, b) => a - b, [3,4,5,6])
    ok: rmap2((a, b) => a - b, [3])
    ok: rmap2((a, b) => a * b, [3])
    ok: rmap2((a, b) => a * b, [])
BEGIN partialSums()
    ok: partialSums([1,2,3,4])
    ok: partialSums([1,2,3,4,5,6,7])
    ok: partialSums([1,-2,3,-4,5,-6,7,-8,9])
    ok: partialSums([11,22])
    ok: partialSums([11])
    ok: partialSums([])
BEGIN partialFnAppls()
    ok: partialFnAppls((a, b) => a + b, [1,2,3,4])
    ok: partialFnAppls((a, b) => a + b, [1,2,3,4,5,6,7])
    ok: partialFnAppls((a, b) => a - b, [1,2,3,4,5,6,7])
    ok: partialFnAppls((a, b) => a + b, [1,-2,3,-4,5,-6,7,-8,9])
    ok: partialFnAppls((a, b) => a * b, [11,22])
    ok: partialFnAppls((a, b) => a + b, [11])
    ok: partialFnAppls((a, b) => a + b, [])
# of errors = 0
